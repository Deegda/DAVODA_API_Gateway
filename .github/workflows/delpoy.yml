name: Davoda Gateway API Push and Deploy

on:
    push:
        branches:
            - master
            - dev

jobs:
    Build_Deploy:
        runs-on: ubuntu-20.04
        steps:
            - name: Checkout Branch
              uses: actions/checkout@v2

            - name: Create .env file
              run: |
                  touch .env
                  cat .env

            - name: Inject slug/short variables
              uses: rlespinasse/github-slug-action@v3.x

            - name: Slack Notification on Start
              uses: tokorom/action-slack-incoming-webhook@main
              env:
                  INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
              with:
                  text: '*<${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}|Gateway API 배포 시작::${{ env.GITHUB_REF_SLUG }}>*' #Required True 인 값이다..
                  attachments: |
                      [
                        {
                          "title": "배포가 시작되었습니다.",
                          "author_name": "${{ github.actor }}",
                          "author_icon": "${{ github.event.sender.avatar_url }}"
                        }
                      ]

            - name: Install NodeJS
              uses: actions/setup-node@v1
              with:
                  node-version: 14

            - name: Cache node_modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.OS }}-build-
                      ${{ runner.OS }}-

            - name: Install Packages
              run: yarn install

            # - name: Make Zip File
            #   run: zip -r ./$GITHUB_SHA.zip
            #   shall: bash

            - name: Build and Deploy - DEV
              if: github.ref == 'refs/heads/dev'
              env:
                  CI: false
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  AWS_REGION: ap-northeast-2
              run: aws deploy create-deployment --application-name davoda-test --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name DAVODA_API_Gateway --github-location repository=${{ github.repository }},commitId=${{ github.sha }}

            - name: Build and Deploy - PROD
              if: github.ref == 'refs/heads/master'
              env:
                  CI: false
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              run: |
                  yarn deploy:prod

            - name: Slack Notification on SUCCESS
              if: ${{ success() }}
              uses: tokorom/action-slack-incoming-webhook@main
              env:
                  INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
              with:
                  text: '*<${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}|Gateway API 배포 성공::${{ env.GITHUB_REF_SLUG }}>*'
                  attachments: |
                      [
                        {
                          "title": "배포가 완료되었습니다.",
                          "color": "good",
                          "author_name": "${{ github.actor }}",
                          "author_icon": "${{ github.event.sender.avatar_url }}"
                        }
                      ]

            - name: Slack Notification on Failure
              if: ${{ failure() }}
              uses: tokorom/action-slack-incoming-webhook@main
              env:
                  INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
              with:
                  text: '*<${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}|Gateway API Deploy Failure::${{ env.GITHUB_REF_SLUG }}>*'
                  attachments: |
                      [
                        {
                          "title": "배포가 실패하였습니다.",
                          "color": "danger",
                          "author_name": "${{ github.actor }}",
                          "author_icon": "${{ github.event.sender.avatar_url }}"
                        }
                      ]
